{
  "openapi": "3.0.0",
  "info": {
    "title": "api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/toya123/API2/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "paths": {
    "/events/deviceAlarms/byFilters": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "This method is used by the ACS to get system events.",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/events/deviceAlarms/ack/{id}": {
      "post": {
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/events/deviceAlarms/ackMany": {
      "post": {
        "tags": [
          "Events"
        ],
        "requestBody": {
          "description": "ackArray",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/events/device/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/events/system/byFilters": {
      "get": {
        "tags": [
          "Events"
        ],
        "description": "This method is used by the ACS to get system events.",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/events/deviceSpecificErrors/byFilters": {
      "get": {
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/events/userAction/byFilters": {
      "get": {
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/import/file": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to import a monitor rule.",
        "requestBody": {
          "description": "file",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/{id}/clone/{name}": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to clone a monitor rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Version"
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/{id}/export/xml": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to export a monitor to a file.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/{id}/{operation}": {
      "put": {
        "tags": [
          "Monitoring"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "path",
            "description": "operation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "activate",
                "deactivate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/{id}/fork": {
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to fork a monitor rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Version"
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/{id}": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to get a monitor rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to update a monitor rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Struct"
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to delete a monitor rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/monitoring/": {
      "get": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to get all monitor rules.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "Monitoring"
        ],
        "description": "This method is used by the ACS to add a new monitor rule.",
        "requestBody": {
          "description": "monitorItemStruct",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/monitoring_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/operations": {
      "post": {
        "tags": [
          "Operations"
        ],
        "description": "This method is used by the ACS to add a task to a device.",
        "requestBody": {
          "description": "operationStruct",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/operations_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/operations/request/{operationId}/cancel": {
      "put": {
        "tags": [
          "Operations"
        ],
        "description": "This method is used by the ACS to delete a task.",
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "description": "operationId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/operations/{deviceId}/request/cancel": {
      "post": {
        "tags": [
          "Operations"
        ],
        "description": "This method is used by the ACS to delete tasks from a device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/count/{parameter}": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "description": "parameter",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "total",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/allCount": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the device all count.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/totalCount": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the device count",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/count/{parameter}": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "description": "parameter",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "total",
                "status"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/find/byFilters": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the list of devices by specified filtering parameters.",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/find/byFilters": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/report/summary": {
      "post": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to create the summary report by product class with given json body.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "txt",
                "csv",
                "xlsx"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "SummaryConfigStruct",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report_summary_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/group/{parameter}": {
      "post": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to import device sn/imei/msisdn list and create a new group.",
        "parameters": [
          {
            "name": "parameter",
            "in": "path",
            "description": "parameter",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "sn",
                "imei",
                "msisdn"
              ]
            }
          },
          {
            "name": "groupName",
            "in": "query",
            "description": "groupName",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoFiltering",
            "in": "query",
            "description": "autoFiltering",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scopeType",
            "in": "query",
            "description": "scopeType",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "groupStruct",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/group/imei": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "groupName",
            "in": "query",
            "description": "groupName",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoFiltering",
            "in": "query",
            "description": "autoFiltering",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scopeType",
            "in": "query",
            "description": "scopeType",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "groupStruct",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/{deviceId}/firmware/latest": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the latest firmware of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/{deviceId}/firmware/latest": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/{deviceId}/callLog": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the call log of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/server/report/count": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/server/report/{reportId}": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "reportId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/server/report": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/{deviceId}/report/count": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the report count of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/{deviceId}/report/{logId}": {
      "delete": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/{deviceId}/report": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/report/device/{reportId}": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "reportId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "txt",
                "csv",
                "xlsx"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/report/server/{reportId}": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "reportId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "txt",
                "csv",
                "xlsx"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the device ID (deviceId) by specified msisdn and imei",
        "parameters": [
          {
            "name": "msisdn",
            "in": "query",
            "description": "msisdn",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imei",
            "in": "query",
            "description": "imei",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/acc/device/exit": {
      "post": {
        "tags": [
          "DMS"
        ],
        "description": "Return the requested info entry in String format",
        "parameters": [
          {
            "name": "msisdn",
            "in": "query",
            "description": "msisdn",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imei",
            "in": "query",
            "description": "imei",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/acc/device": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "msisdn",
            "in": "query",
            "description": "msisdn",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imei",
            "in": "query",
            "description": "imei",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "msisdn",
            "in": "query",
            "description": "msisdn",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imei",
            "in": "query",
            "description": "imei",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/{deviceId}/logs/upload": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/{deviceId}/logs/upload": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/{deviceId}/download/{fileId}": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/{deviceId}/download/{fileId}": {
      "post": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/deviceInfo": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the info of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/simCardInfo": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the simCard info of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/errors": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/apps": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/dataUsage": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the data usage of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/radioStatus": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/wifiStatus": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the wifi status of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/connectedHosts": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the connected hosts of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/connectivity": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/lxc": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/neighborList": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/Spectrum": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/PLMNList": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/serviceProvider": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/softwareManagement": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/appList": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/regStatus": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/device/{deviceId}/deviceStatus": {
      "get": {
        "tags": [
          "DMS"
        ],
        "description": "This method is used by the ACS to get the status of the device.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/summaryReportConfig": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/{productType}/summaryProvisioningReportConfig": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/summary/availProductNames": {
      "get": {
        "tags": [
          "DMS"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/statistics/availStatisticsProductNames": {
      "get": {
        "tags": [
          "DMS"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/device/{deviceId}": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dms/ata/{deviceId}": {
      "get": {
        "tags": [
          "DMS"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration",
        "description": "This method is used by the ACS to get all configurations.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration",
        "description": "This method is used by the ACS to add a configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/configuration_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/import/file": {
      "post": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration file",
        "description": "This method is used by the ACS to import the configuration.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/import_file_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/load/file": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "load file",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/{configurationId}/clone/{cloneConfigureName}": {
      "post": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration-configurationId-clone-cloneConfigureName",
        "description": "This method is used by the ACS to clone the configuration.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "configurationId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloneConfigureName",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/{configurationId}/export/xml": {
      "post": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration-configurationId-export-xml",
        "description": "This method is used by the ACS to export the configuration.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/{configurationId}": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration-configurationId",
        "description": "This method is used by the ACS to get configuration by id.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "configuration"
        ],
        "summary": "configuration-configurationId",
        "description": "This method is used by the ACS to update configuration by id.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/configuration_configurationId_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "configuration"
        ],
        "description": "This method is used by the ACS to delete the configuration.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/{configurationId}/fork": {
      "post": {
        "tags": [
          "configuration"
        ],
        "description": "This method is used by the ACS to fork the configuration.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/configuration/{configurationId}/(activate|deactivate)": {
      "put": {
        "tags": [
          "configuration"
        ],
        "description": "This method is used by the ACS to activate or deactivate the configuration.",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/custom/device/cellular/dataUsage": {
      "get": {
        "tags": [
          "custom"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/custom/device/broadband/outage": {
      "get": {
        "tags": [
          "custom"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dataTable/server/reports": {
      "get": {
        "tags": [
          "dataTable"
        ],
        "description": "This method is used by the ACS to get the server report logs.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dataTable/usp/server/reports": {
      "get": {
        "tags": [
          "dataTable"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dataTable/device/{deviceId}/operations/pending": {
      "get": {
        "tags": [
          "dataTable"
        ],
        "description": "This method is used by the ACS to get device pending task.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dataTable/device/{deviceId}/operations/log": {
      "get": {
        "tags": [
          "dataTable"
        ],
        "description": "This method is used by the ACS to get the device operation logs.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dataTable/{productType}/device/{deviceId}/reports": {
      "get": {
        "tags": [
          "dataTable"
        ],
        "description": "This method is used by the ACS to get the device report logs with device’s product type and id.",
        "parameters": [
          {
            "name": "productType",
            "in": "path",
            "description": "productType",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/dataTable/{productName}/device/{deviceId}/reports": {
      "get": {
        "tags": [
          "dataTable"
        ],
        "description": "This method is used by the ACS to get the device report logs.",
        "parameters": [
          {
            "name": "productName",
            "in": "path",
            "description": "productName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get device basic information with device ID (The device ID is available from section 2.2.1",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the info of the device by the deviceStruct.",
        "responses": {
          "200": {
            "description": "Returns the requested info entry in JSON format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/unregister": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete a list of devices.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/device_unregister_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/dataModel": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to query the data model of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in JSON format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/dataModel/modify/{node}": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to add node to the data model of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "node",
            "in": "path",
            "description": "node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete node from the data model of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "node",
            "in": "path",
            "description": "node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/dataModel/discover/{node}": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to refresh the data model of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "node",
            "in": "path",
            "description": "node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/groupDataModel": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the data model of the device group.",
        "responses": {
          "200": {
            "description": "Returns the requested info entry in JSON format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/session": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the session log of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in JSON format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete all session logs of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/detail/{sessionId}": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "sessionId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in JSON format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/sessionExport": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "sessionExport",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/session/{logId}": {
      "delete": {
        "tags": [
          "device"
        ],
        "description": "session log",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/session/count": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the count of session logs of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/operations/{logId}": {
      "delete": {
        "tags": [
          "device"
        ],
        "description": "operations log",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/operations/count": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the count of operation logs of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/log/operations": {
      "delete": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete all operation logs of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/label": {
      "put": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/files": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get managed files of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to edit the managed file of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to add item to managed files of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/files/{fileId}": {
      "delete": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete the managed file of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/download/file/{fileId}": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to set a download task to the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/transfers/current/count": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/transfers/current": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/transfers/current/{fileId}/cancel": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to set a download task to the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/transfers/log": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/transfers/log/count": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/transfers/log/{logId}": {
      "delete": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/discoveringList": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/discoveringList/{listId}": {
      "delete": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "path",
            "description": "listId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/discoveringList/{listId}/activate": {
      "put": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "path",
            "description": "listId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/discoveringList/{listId}/deactivate": {
      "put": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listId",
            "in": "path",
            "description": "listId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/diagnostics/result/count": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/diagnostics/result": {
      "delete": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/diagnostics/{logId}/result": {
      "delete": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/bulkDataRule": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/bulkDataRule/{ruleId}": {
      "delete": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/diagnostics/{diagnosticsId}/execute": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagnosticsId",
            "in": "path",
            "description": "diagnosticsId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/operations/pending/count": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get count of the pending tasks of a device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/connectionRequest/XMPP": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to execute connect request to the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/enter/MQTT": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/Reboot": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to execute reboot command to the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/FactoryReset": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to execute factory-reset command to the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/attributes": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to execute connect request to the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/attribute": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to edit provisioning attributes of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/attributes/{attributeName}": {
      "post": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to edit attribute of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeName",
            "in": "path",
            "description": "attributeName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "delete": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to delete the attribute of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeName",
            "in": "path",
            "description": "attributeName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/{value}": {
      "put": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/device/dashboard/count": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the dashboard count of devices.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/network_map/Info": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the netword map info of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/location/Info": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the location info of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/router/Info": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the router info of the device.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/tower/towerLocation/{cgi}": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "cgi",
            "in": "path",
            "description": "cgi",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/tower/neighborhood/{cgi}": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "cgi",
            "in": "path",
            "description": "cgi",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/events/activeAlarms/byFilters": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the active alarms of the device by specified filtering parameters.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/events/activeAlarms/ack/{id}": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/events/activeAlarms/ackMany": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/events/historyAlarms/byFilters": {
      "get": {
        "tags": [
          "device"
        ],
        "description": "This method is used by the ACS to get the history alarms of the device by specified filtering parameters.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/troubleshooting/register": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/troubleshooting/unregister": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/troubleshooting/polling": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/troubleshooting/saveMsg": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/troubleshooting/forceDisconnect": {
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/device/{deviceId}/initProvision/request": {
      "get": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "device"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/diagnostics/template/{id}": {
      "delete": {
        "tags": [
          "diagnostics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/diagnostics/template": {
      "get": {
        "tags": [
          "diagnostics"
        ],
        "description": "template",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "diagnostics"
        ],
        "description": "template",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "diagnostics"
        ],
        "description": "template",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/diagnostics/{id}": {
      "delete": {
        "tags": [
          "diagnostics"
        ],
        "description": "diagnostics id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/diagnostics": {
      "get": {
        "tags": [
          "diagnostics"
        ],
        "description": "diagnostics",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "diagnostics"
        ],
        "description": "diagnostics",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "diagnostics"
        ],
        "description": "diagnostics",
        "responses": {
          "200": {
            "description": "The request was performed successfully"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/productClass/{id}/discoveringList/{discoverid}/{op}": {
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "discoveringList",
        "description": "discoveringList",
        "operationId": "discoveringList_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discoverid",
            "in": "path",
            "description": "discoverid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "op",
            "in": "path",
            "description": "op",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/discoveringList/{discoverid}": {
      "delete": {
        "tags": [
          "productClass"
        ],
        "summary": "discoveringList",
        "description": "discoveringList",
        "operationId": "discoveringList_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "discoverid",
            "in": "path",
            "description": "discoverid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/discoveringList": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "discoveringList",
        "description": "Finds discoveringList by tags.",
        "operationId": "discoveringList_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "search by id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "discoveringList",
        "description": "Finds discoveringList by tags.",
        "operationId": "discoveringList_id_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "search by id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "discoveringList",
        "description": "Finds discoveringList by tags.",
        "operationId": "discoveringList_id_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "search by id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/diagnostics/template/{tempid}": {
      "delete": {
        "tags": [
          "productClass"
        ],
        "summary": "Deletes a diagnostics by id",
        "description": "Deletes a diagnostics by id",
        "operationId": "diagnostics_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tempid",
            "in": "path",
            "description": "tempid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/diagnostics/template": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "diagnostics",
        "description": "diagnostics",
        "operationId": "diagnostics_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "diagnostics",
        "description": "diagnostics",
        "operationId": "diagnostics_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "diagnostics",
        "description": "diagnostics",
        "operationId": "diagnostics_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/diagnostics/{diagid}": {
      "delete": {
        "tags": [
          "productClass"
        ],
        "summary": "Deletes a diagnostics by id",
        "description": "Deletes a diagnostics by id",
        "operationId": "diagnostics_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diagid",
            "in": "path",
            "description": "diagid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/diagnostics": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "diagnostics",
        "description": "diagnostics",
        "operationId": "diagnostics_id_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "diagnostics",
        "description": "diagnostics",
        "operationId": "diagnostics_id_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "diagnostics",
        "description": "diagnostics",
        "operationId": "diagnostics_id_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/attributes/{name}": {
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "attributes",
        "description": "This method is used by the ACS to update the product class attribute.",
        "operationId": "attributes_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "delete": {
        "tags": [
          "productClass"
        ],
        "summary": "attributes",
        "description": "This method is used by the ACS to delete the product class attribute.",
        "operationId": "attributes_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/attributes": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "attributes",
        "description": " This method is used by the ACS to get the product class attributes.",
        "operationId": "attributes_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/files/{fileid}": {
      "delete": {
        "tags": [
          "productClass"
        ],
        "summary": "deleteProductClassFiles",
        "description": " This method is used by the ACS to delete a file from the product class.",
        "operationId": "files_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileid",
            "in": "path",
            "description": "fileid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/files": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "getProductClassFiles",
        "description": "This method is used by the ACS to list files associated with the product class.",
        "operationId": "files_id_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "updateProductClassFiles",
        "description": "fiThis method is used by the ACS to update a file of the product class.les",
        "operationId": "files_id_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "createProductClassFiles",
        "description": "filThis method is used by the ACS to add a file to the product class.es",
        "operationId": "files_id_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/bulkDataRule": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "bulkDataRule",
        "description": "bulkDataRule",
        "operationId": "bulkDataRule_id_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "bulkDataRule",
        "description": "bulkDataRule",
        "operationId": "bulkDataRule_id_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "bulkDataRule",
        "description": "bulkDataRule",
        "operationId": "bulkDataRule_id_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/bulkDataRule/{ruleId}": {
      "delete": {
        "tags": [
          "productClass"
        ],
        "summary": "bulkDataRule",
        "description": "bulkDataRule",
        "operationId": "bulkDataRule_id_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/attribute": {
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "setPerformProductClassActivation",
        "description": "This method is used by the ACS to update the product class attribute.",
        "operationId": "attribute_id_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}/{op}": {
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "performProductClassActivation",
        "description": "performProductClassActivation",
        "operationId": "attribute_id_put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "op",
            "in": "path",
            "description": "op",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass/{id}": {
      "put": {
        "tags": [
          "productClass"
        ],
        "summary": "deleteProductClass",
        "operationId": "deleteProductClass",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/productClass": {
      "get": {
        "tags": [
          "productClass"
        ],
        "summary": "getProductClass",
        "description": "This method is used by the ACS to get product classes.",
        "operationId": "getProductClass",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "productClass"
        ],
        "summary": "createProductClass",
        "description": "This method is used by the ACS to add a product class.",
        "operationId": "createProductClass",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/attributes/": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "getProvisioningScopeAttributes",
        "description": "This method is used by the ACS to get attributes of the provision.",
        "operationId": "getProvisioningScopeAttributes",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "createProvisionScopes",
        "description": "createProvisionScopes",
        "operationId": "createProvisionScopes",
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/scope_attributes_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/cpeNumbers": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "getProvisioningScopeCpeNumbers",
        "description": "This method is used by the ACS to get the cpe numbers of provisioning scopes.",
        "operationId": "getProvisioningScopeCpeNumbers",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/includeProduct": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "getIncludeProduct",
        "description": "getIncludeProduct",
        "operationId": "getIncludeProduct",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/attribute": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "attribute",
        "description": "This method is used by the ACS to get attributes of the provision.",
        "operationId": "attribute",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/scopeGroupStatus": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "scopeGroupStatus",
        "description": "This method is used by the ACS to get the group status of provisioning scopes.",
        "operationId": "scopeGroupStatus",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/sn": {
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "scopeGroupStatus",
        "description": "scopeGroupStatus",
        "operationId": "scopeGroupStatus_sn",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/msisdn": {
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "createGroup",
        "description": "createGroup",
        "operationId": "createGroup",
        "parameters": [
          {
            "name": "groupName",
            "in": "query",
            "description": "groupName",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "autoFiltering",
            "in": "query",
            "description": "autoFiltering",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "scopeType",
            "in": "query",
            "description": "scopeType",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/{itemId}": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "getGroupByitemId",
        "description": "getGroupByitemId",
        "operationId": "getGroupByitemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "delete": {
        "tags": [
          "provisioning"
        ],
        "summary": "deleteGroupByitemId",
        "description": "deleteGroupByitemId",
        "operationId": "deleteGroupByitemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/{itemId}/struct": {
      "delete": {
        "tags": [
          "provisioning"
        ],
        "summary": "deleteStructGroupByitemId",
        "description": "deleteStructGroupByitemId",
        "operationId": "deleteStructGroupByitemId",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/{itemId}/addToSn": {
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "ScopeGroupAddToSerialNumber",
        "description": "ScopeGroupAddToSerialNumber",
        "operationId": "ScopeGroupAddToSerialNumber",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/itemId_addToSn_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/{itemId}/addToMsisdn": {
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "ScopeGroupAddToMsisdn",
        "description": "ScopeGroupAddToMsisdn",
        "operationId": "ScopeGroupAddToMsisdn",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/itemId_addToMsisdn_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/{itemId}/editToSn": {
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "ScopeGroupEditFileSn",
        "description": "ScopeGroupEditFileSn",
        "operationId": "ScopeGroupEditFileSn",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/itemId_editToSn_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group/{itemId}/editToMsisdn": {
      "post": {
        "tags": [
          "provisioning"
        ],
        "summary": "ScopeGroupEditFileMsisdn",
        "description": "ScopeGroupEditFileMsisdn",
        "operationId": "ScopeGroupEditFileMsisdn",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/itemId_editToMsisdn_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/{id}/device/count": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "getdeviceCount",
        "description": "This method is used by the ACS to get the device count of the provisioning scope.",
        "operationId": "getdeviceCount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/provisioning/scope/group": {
      "get": {
        "tags": [
          "provisioning"
        ],
        "summary": "getScopeGroup",
        "description": "This method is used by the ACS to get the group of provisioning scopes.",
        "operationId": "getScopeGroup",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/server/files": {
      "get": {
        "tags": [
          "server"
        ],
        "summary": "getServerFiles",
        "description": "This method is used by the ACS to list files records managed by the server.",
        "operationId": "getServerFiles",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "put": {
        "tags": [
          "server"
        ],
        "summary": "updateServerFile",
        "description": "This method is used by the ACS to update a server file record.",
        "operationId": "updateServerFile_put",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/server_files_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "server"
        ],
        "summary": "addServerFile",
        "description": "This method is used by the ACS to add a file record to the server.",
        "operationId": "addServerFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/server_files_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/server/files/{fileId}": {
      "delete": {
        "tags": [
          "server"
        ],
        "summary": "deleteServerFileItem",
        "description": "This method is used by the ACS to remove a server file record.",
        "operationId": "deleteServerFileItem",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/server/bulkDataRule": {
      "get": {
        "tags": [
          "server"
        ],
        "summary": "getServerBulkDataRuleList",
        "description": "getServerBulkDataRuleList",
        "operationId": "getServerBulkDataRuleList",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "server"
        ],
        "summary": "updateServerBulkDataRule",
        "description": "updateServerBulkDataRule",
        "operationId": "updateServerBulkDataRule",
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/server_bulkDataRule_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "server"
        ],
        "summary": "AddServerBulkDataRule",
        "description": "AddServerBulkDataRule",
        "operationId": "AddServerBulkDataRule",
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/server_bulkDataRule_body_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/server/bulkDataRule/{ruleId}": {
      "delete": {
        "tags": [
          "server"
        ],
        "summary": "deleteServerBulkDataRule",
        "description": "deleteServerBulkDataRule",
        "operationId": "deleteServerBulkDataRule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/server/bulkDataRule/information": {
      "get": {
        "tags": [
          "server"
        ],
        "summary": "getServerInfoFromLicense",
        "description": "getServerInfoFromLicense",
        "operationId": "getServerInfoFromLicense",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/user/verifyidp": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "verifyidp",
        "description": "verifyidp",
        "operationId": "verifyidp",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_verifyidp_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/user/verify": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "verify",
        "description": "verify",
        "operationId": "verify",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/user/{id}/{op}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "activeUser",
        "description": "This method is used by the ACS to active or deactive a user.",
        "operationId": "activeUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "op",
            "in": "path",
            "description": "op",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "removeUser",
        "description": "remoThis method is used by the ACS to remove a user.veUser",
        "operationId": "removeUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "getUser",
        "description": "This method is used by the ACS to get current user info who runs this command.",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "updateUser",
        "description": "This method is used by the ACS to update a user.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "addUser",
        "description": "This method is used by the ACS to add a user.",
        "operationId": "addUser",
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user_body_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/user/normal": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "getNormalUser",
        "description": "getNormalUser",
        "operationId": "getNormalUser",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/operations/{operationid}/cancel": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "cancelDevGroupOperation",
        "description": "This method is used by the ACS to cancel the group pending operation.",
        "operationId": "cancelDevGroupOperation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationid",
            "in": "path",
            "description": "operationid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/operations/log/{logid}": {
      "delete": {
        "tags": [
          "devicegroup"
        ],
        "summary": "deleteDevGroupOperationlog",
        "description": "This method is used by the ACS to delete a item from the group operation log.",
        "operationId": "deleteDevGroupOperationlog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logid",
            "in": "path",
            "description": "logid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/operations/log/count": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "group_operations_log_count",
        "description": "This method is used by the ACS to get the group operation logs count.",
        "operationId": "group_operations_log_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/operations/log": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "get_group_operations_log",
        "description": "This method is used by the ACS to get the group operation logs.",
        "operationId": "get_group_operations_log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "delete": {
        "tags": [
          "devicegroup"
        ],
        "summary": "deleteDevGroupOperationlogs",
        "description": "deletThis method is used by the ACS to delete the group operation log.eDevGroupOperationlogs",
        "operationId": "deleteDevGroupOperationlogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/operations/count": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "group_operations_count",
        "description": "This method is used by the ACS to get the group operation count.",
        "operationId": "group_operations_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/operations": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "group_pengding_operations",
        "description": "This method is used by the ACS to get the group operations.",
        "operationId": "group_pengding_operations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "devicegroup"
        ],
        "summary": "AddDevGroupOperation",
        "description": "This method is used by the ACS to add a operation for the group.",
        "operationId": "AddDevGroupOperation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/struct": {
      "delete": {
        "tags": [
          "devicegroup"
        ],
        "summary": "deleteItemFromDevGroup",
        "description": "This method is used by the ACS to delete a device from a group.",
        "operationId": "deleteItemFromDevGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/addItem": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "addItemToDevGroup",
        "description": "addItemToDevGroup",
        "operationId": "addItemToDevGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/snFile": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "updateDevGroupBySnFile",
        "description": "updateDevGroupBySnFile",
        "operationId": "updateDevGroupBySnFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/imeiFile": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "updateDevGroupByImeiFile",
        "description": "updateDevGroupByImeiFile",
        "operationId": "updateDevGroupByImeiFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/msisdnFile": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "updateDevGroupByMsisdnFile",
        "description": "updateDevGroupByMsisdnFile",
        "operationId": "updateDevGroupByMsisdnFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/groupRename": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "updateDevGroupName",
        "description": "updateDevGroupName",
        "operationId": "updateDevGroupName",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{groupName}/configuration": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "group_get_config_by_groupname",
        "description": "group_get_config_by_groupname",
        "operationId": "group_get_config_by_groupname",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "description": "groupName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/query/by": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "get_group_by",
        "description": "get_group_by",
        "operationId": "get_group_by",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/ids": {
      "put": {
        "tags": [
          "devicegroup"
        ],
        "summary": "replace_group_item",
        "description": "This method is used by the ACS to update devices list of the group with device id.",
        "operationId": "replace_group_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}/sync": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "sync_group_item",
        "description": "sync_group_item",
        "operationId": "sync_group_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup/{id}": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "get_group_item",
        "description": "geThis method is used by the ACS to get detail information of the group.t_group_item",
        "operationId": "get_group_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "delete": {
        "tags": [
          "devicegroup"
        ],
        "summary": "deleteDevGroup",
        "description": "This method is used by the ACS to delete a group.",
        "operationId": "deleteDevGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/devicegroup": {
      "get": {
        "tags": [
          "devicegroup"
        ],
        "summary": "get_group",
        "description": "This method is used by the ACS to list all groups and devices inside the group.",
        "operationId": "get_group",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "devicegroup"
        ],
        "summary": "setDevGroup",
        "description": "setDevGroup",
        "operationId": "setDevGroup",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/operations/{operationid}/cancel": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "cancelDevGroupOperation",
        "description": "cancelUspDevGroupOperation",
        "operationId": "cancelUspDevGroupOperation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationid",
            "in": "path",
            "description": "operationid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/operations/log/{logid}": {
      "delete": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "deleteUspDevGroupOperationlog",
        "description": "deleteUspDevGroupOperationlog",
        "operationId": "deleteUspDevGroupOperationlog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logid",
            "in": "path",
            "description": "logid",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/operations/log/count": {
      "delete": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "usp_group_operations_log_count",
        "description": "usp_group_operations_log_count",
        "operationId": "usp_group_operations_log_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/operations/log": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "usp_get_group_operations_log",
        "description": "usp_get_group_operations_log",
        "operationId": "usp_get_group_operations_log",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "delete": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "deleteUspDevGroupOperationlogs",
        "description": "deleteUspDevGroupOperationlogs",
        "operationId": "deleteUspDevGroupOperationlogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/operations/count": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "usp_group_operations_count",
        "description": "usp_group_operations_count",
        "operationId": "usp_group_operations_count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/operations": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "usp_group_pengding_operations",
        "description": "usp_group_pengding_operations",
        "operationId": "usp_group_pengding_operations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/struct": {
      "delete": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "deleteUspItemFromDevGroup",
        "description": "deleteUspItemFromDevGroup",
        "operationId": "deleteUspItemFromDevGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/addItem": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "addUspItemToDevGroup",
        "description": "addUspItemToDevGroup",
        "operationId": "addUspItemToDevGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/snFile": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "updateUspDevGroupBySnFile",
        "description": "updateUspDevGroupBySnFile",
        "operationId": "updateUspDevGroupBySnFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/imeiFile": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "updateUspDevGroupByImeiFile",
        "description": "updateUspDevGroupByImeiFile",
        "operationId": "updateUspDevGroupByImeiFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/msisdnFile": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "updateUspDevGroupByMsisdnFile",
        "description": "updateUspDevGroupByMsisdnFile",
        "operationId": "updateUspDevGroupByMsisdnFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/groupRename": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "updateUspDevGroupName",
        "description": "updateUspDevGroupName",
        "operationId": "updateUspDevGroupName",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{groupName}/configuration": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "usp_group_get_config_by_groupname",
        "description": "usp_group_get_config_by_groupname",
        "operationId": "usp_group_get_config_by_groupname",
        "parameters": [
          {
            "name": "groupName",
            "in": "path",
            "description": "groupName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/query/by": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "get_usp_group_by",
        "description": "get_usp_group_by",
        "operationId": "get_usp_group_by",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/ids": {
      "put": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "replace_usp_group_item",
        "description": "replace_usp_group_item",
        "operationId": "replace_usp_group_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}/sync": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "sync_usp_group_item",
        "description": "sync_usp_group_item",
        "operationId": "sync_usp_group_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup/{id}": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "get_usp_group_item",
        "description": "get_usp_group_item",
        "operationId": "get_usp_group_item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "delete": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "delete_Usp_DevGroup",
        "description": "delete_Usp_DevGroup",
        "operationId": "delete_Usp_DevGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/usp/deviceGroup": {
      "get": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "get_usp_group",
        "description": "get_usp_group",
        "operationId": "get_usp_group",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      },
      "post": {
        "tags": [
          "usp/deviceGroup"
        ],
        "summary": "set_usp_group",
        "description": "set_usp_group",
        "operationId": "set_usp_group",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "The request sent by the client has a syntax error"
          }
        }
      }
    },
    "/nbi/usp/device": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device base info by struct",
        "description": "get device base info by struct",
        "operationId": "usp-1",
        "parameters": [
          {
            "name": "deviceIdStruct",
            "in": "query",
            "description": "deviceIdStruct",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/nbi/usp/device/register": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "register device",
        "description": "This method is used by the ACS to register a usp device.",
        "operationId": "usp-2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/device_register_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/batchRegister": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "batchRegister",
        "description": "batchRegister",
        "operationId": "usp-3",
        "parameters": [
          {
            "name": "autoFiltering",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/device_register_body"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/localAgent/controller": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "getLocalAgentController",
        "description": "This method is used by the ACS to get the local agent controller of the usp device.",
        "operationId": "usp-4",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/localAgent/subscription": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "getLocalAgentSubscription",
        "description": "This method is used by the ACS to get the local agent controller of the usp device.",
        "operationId": "usp-5",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/localAgent/mtp": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "getLocalAgentMtp",
        "description": "This method is used by the ACS to get the local agent mtp of the usp device.",
        "operationId": "usp-6",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/bulkDataHistory": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "getDeviceBulkDataChart",
        "description": "getDeviceBulkDataChart",
        "operationId": "usp-7",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{id}/parameter/{method}": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "setDeviceParameterValue",
        "description": "setDeviceParameterValue",
        "operationId": "usp-8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "method",
            "in": "path",
            "description": "method",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "value",
                "notification",
                "accessList"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/operations/{logId}": {
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "deleteDeviceOperationLog",
        "description": "deleteDeviceOperationLog",
        "operationId": "usp-9",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/operations": {
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "deleteDeviceAllOperationLog",
        "description": "deleteDeviceAllOperationLog",
        "operationId": "usp-10",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/operations/{deviceId}/request/cancel": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "operationCancelAll",
        "description": "operationCancelAll",
        "operationId": "usp-11",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/operations/request/{operationId}/cancel": {
      "put": {
        "tags": [
          "usp"
        ],
        "summary": "operationCancel",
        "description": "operationCancel",
        "operationId": "usp-12",
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "description": "operationId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/dataTable/device/{deviceId}/operations/pending/": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "getDeviceOperationsLog",
        "description": "getDeviceOperationsLog",
        "operationId": "usp-13",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/operations/pending/count": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "getDeviceOperationLogCount",
        "description": "getDeviceOperationLogCount",
        "operationId": "usp-14",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/operations": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "addOperation",
        "description": "addOperation,",
        "operationId": "usp-15",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usp_operations_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/operation": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "addOperation",
        "description": "addOperation,",
        "operationId": "usp-16",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usp_operation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/server/status": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "Get mqttServerProvision setting",
        "description": "Get mqttServerProvision setting",
        "operationId": "usp-17",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/find/byFilters": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "find device by filter",
        "description": "find device by filter",
        "operationId": "usp-18",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/search": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "search device",
        "description": "search device",
        "operationId": "usp-19",
        "parameters": [
          {
            "name": "searchType",
            "in": "query",
            "description": "searchType",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchValue",
            "in": "query",
            "description": "searchValue",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/count/status/Online": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "count online device",
        "description": "count online device",
        "operationId": "usp-20",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/count/total": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "count devices",
        "description": "count devices",
        "operationId": "usp-21",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/allCount": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device count of productName",
        "description": "get device count of productName",
        "operationId": "usp-22",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/dataTable/device/{deviceId}/operations/log/": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device operations log",
        "description": "get device operations log",
        "operationId": "usp-23",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/session/{logId}": {
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete device session log",
        "description": "delete device session log",
        "operationId": "usp-24",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "logId",
            "in": "path",
            "description": "logId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/operations/count": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device operation log count",
        "description": "get device operation log count",
        "operationId": "usp-25",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/session": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device session log",
        "description": "get device session log",
        "operationId": "usp-26",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete device log",
        "description": "delte device log",
        "operationId": "usp-27",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/session/count": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device operation log count",
        "description": "get device operation log count",
        "operationId": "usp-28",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/log/sessionExport": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "export session log",
        "description": "export session log",
        "operationId": "usp-29",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/attributes": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device attribute",
        "description": "get device attribute",
        "operationId": "usp-30",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/attribute": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "set device attribute",
        "description": "set device attribute",
        "operationId": "usp-31",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deviceId_attribute_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/attributes/{name}": {
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete device attribute",
        "description": "delete device attribute",
        "operationId": "usp-32",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/{value}": {
      "put": {
        "tags": [
          "usp"
        ],
        "summary": "allow/deny device",
        "description": "allow/deny device",
        "operationId": "usp-33",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "path",
            "description": "value",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "activate",
                "deactivate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/unregister": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "delete device",
        "description": "delete device",
        "operationId": "usp-34",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/device_unregister_body_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get deviceInfo",
        "description": "get deviceInfo",
        "operationId": "usp-35",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete device",
        "description": "delete device",
        "operationId": "usp-36",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/deviceInfo": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get deviceInfo with special format",
        "description": "get deviceInfo with special format",
        "operationId": "usp-37",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{deviceId}/{operation}": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "device operation",
        "description": "device operation",
        "operationId": "usp-38",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "deviceId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "path",
            "description": "operation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deviceId_operation_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{id}/dataModel": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "get device datamodel",
        "description": "get device datamodel",
        "operationId": "usp-39",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/device/{id}/dataModel/discover/{node}": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "add device datamodel",
        "description": "add device datamodel",
        "operationId": "usp-40",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "node",
            "in": "path",
            "description": "node",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/configuration/import/file": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "import configuration",
        "description": "import configuration",
        "operationId": "usp-41",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/configuration/{id}/clone/{name}": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "clone configuration",
        "description": "clone configuration",
        "operationId": "usp-42",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "description": "version"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/configuration/{id}/export/xml": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "export .xml of configuration",
        "description": "export .xml of configuration",
        "operationId": "usp-43",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/configuration/{id}/{operation}": {
      "put": {
        "tags": [
          "usp"
        ],
        "summary": "enable/disable configuration",
        "description": "enable/disable configuration",
        "operationId": "usp-44",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "path",
            "description": "operation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "activate",
                "deactivate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "fork configuration",
        "description": "fork configuration",
        "operationId": "usp-45",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "path",
            "description": "operation",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "enum": [
                "fork"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "description": "version"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/configuration/{id}": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get configuration by id",
        "description": "get configuration by id",
        "operationId": "usp-46",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "usp"
        ],
        "summary": "update configuration by id",
        "description": "update configuration by id",
        "operationId": "usp-47",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/configuration_id_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete configuration by id",
        "description": "delete configuration by id",
        "operationId": "usp-48",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/configuration/": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get all configuration",
        "description": "get all configuration",
        "operationId": "usp-49",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "add configuration by id",
        "description": "add configuration by id",
        "operationId": "usp-50",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usp_configuration_body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/datamodel/{id}": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get datamodel by id",
        "description": "get datamodel by id",
        "operationId": "usp-51",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/datamodel/{id}/import/{filename}": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "import datamodel",
        "description": "import datamodel",
        "operationId": "usp-52",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "path",
            "description": "filename",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "string",
                "description": "xml format"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/datamodel/{id}/profile": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get datamodel profile by id",
        "description": "get datamodel profile by id",
        "operationId": "usp-53",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/datamodel/{id}/": {
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete datamodel",
        "description": "delete datamodel",
        "operationId": "usp-54",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/{productName}/summaryReportConfig": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get summary report config by product",
        "description": "get summary report config by product",
        "operationId": "usp-55",
        "parameters": [
          {
            "name": "productName",
            "in": "path",
            "description": "productName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/{productName}/report/summary": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "get summary report by product",
        "description": "get summary report by product",
        "operationId": "usp-56",
        "parameters": [
          {
            "name": "productName",
            "in": "path",
            "description": "productName",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report_summary_body_1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/dashboard/count": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device dashboard count",
        "description": "get device dashboard count",
        "operationId": "usp-57",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "description": "days",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "time",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/iot/server/report/count": {
      "get": {
        "tags": [
          "usp"
        ],
        "summary": "get device report count",
        "description": "get device report count",
        "operationId": "usp-58",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/iot/server/report": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "add USP Server report",
        "description": "add USP Server report",
        "operationId": "usp-60",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete USP Server all reports",
        "description": "delete USP Server all reports",
        "operationId": "usp-59",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/iot/server/report/{reportId}": {
      "delete": {
        "tags": [
          "usp"
        ],
        "summary": "delete USP Server report item",
        "description": "delete USP Server report item",
        "operationId": "usp-61",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "reportId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/nbi/usp/iot/report/server/{reportId}": {
      "post": {
        "tags": [
          "usp"
        ],
        "summary": "export USP Server report",
        "description": "export USP Server report",
        "operationId": "usp-62",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "reportId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "format",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/logLevel/{level}": {
      "put": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "level",
            "in": "path",
            "description": "level",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/time": {
      "put": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/softVersion/": {
      "get": {
        "tags": [
          "Other"
        ],
        "description": "Return the requested info entry in String format",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/license/": {
      "get": {
        "tags": [
          "Other"
        ],
        "description": "This method is used by the ACS to get the license.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/license/update/": {
      "post": {
        "tags": [
          "Other"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/cluster/": {
      "get": {
        "tags": [
          "Other"
        ],
        "description": "This method is used by the ACS to get the ACS cluster, list onlined ACS server id.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/preferences/": {
      "get": {
        "tags": [
          "Other"
        ],
        "description": "This method is used by the ACS to get the perferences.",
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/preferences/server/": {
      "put": {
        "tags": [
          "Other"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          }
        }
      },
      "delete": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          }
        }
      }
    },
    "/preferences/datasource/": {
      "put": {
        "tags": [
          "Other"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          }
        }
      },
      "delete": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          }
        }
      }
    },
    "/preferences/update": {
      "post": {
        "tags": [
          "Other"
        ],
        "description": "This method is used by the ACS to get the preferences.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/statistics/{nodeId}/metrics/last/100/": {
      "get": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "nodeId",
            "in": "path",
            "description": "nodeId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/statistics/{productClass}/provisioning/report": {
      "post": {
        "tags": [
          "Other"
        ],
        "description": "This method is used by the ACS to get the cluster.",
        "parameters": [
          {
            "name": "productClass",
            "in": "path",
            "description": "productClass",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/statistics/{productClass}/installation/report": {
      "post": {
        "tags": [
          "Other"
        ],
        "description": "This method is used by the ACS to get the cluster.",
        "parameters": [
          {
            "name": "productClass",
            "in": "path",
            "description": "productClass",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/statistics/serverStatus": {
      "get": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/statistics/{productClass}/installation/{interval}/report": {
      "post": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "productClass",
            "in": "path",
            "description": "productClass",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "path",
            "description": "interval",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/discoveringList/": {
      "get": {
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "put": {
        "tags": [
          "Other"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      },
      "post": {
        "tags": [
          "Other"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/discoveringList/{itemId}": {
      "delete": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/discoveringList/{itemId}/deactivate": {
      "put": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/discoveringList/{itemId}/activate": {
      "put": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          }
        }
      }
    },
    "/module/{name}/disable": {
      "put": {
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the requested info entry in String format"
          },
          "400": {
            "description": "The request sent by the client has a syntax error."
          },
          "500": {
            "description": "Operate error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Struct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "schedule": {
            "type": "object"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stages": {
            "type": "object"
          },
          "firstStage": {
            "type": "string"
          },
          "target": {
            "type": "object"
          }
        }
      },
      "configuration_body": {
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "import_file_body": {
        "properties": {
          "name": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "inline_response_200": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "version": {
            "type": "number"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/inline_response_200_schedule"
          },
          "isActive": {
            "type": "boolean"
          },
          "stages": {
            "type": "object"
          },
          "target": {
            "type": "object"
          }
        }
      },
      "configurationconfigurationId_schedule": {
        "type": "object",
        "properties": {
          "standardTime": {
            "type": "string"
          },
          "validFrom": {
            "type": "string"
          },
          "validUntil": {
            "type": "string"
          },
          "windowEnd": {
            "type": "string"
          },
          "windowEndMinute": {
            "type": "string"
          },
          "windowStart": {
            "type": "string"
          },
          "windowStartMinute": {
            "type": "string"
          }
        }
      },
      "configuration_configurationId_body": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "version": {
            "type": "number"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/configurationconfigurationId_schedule"
          },
          "isActive": {
            "type": "boolean"
          },
          "stages": {
            "type": "object"
          },
          "target": {
            "type": "object"
          }
        }
      },
      "inline_response_200_1": {
        "properties": {
          "iTotalRecords": {
            "type": "integer"
          },
          "iTotalDisplayRecords": {
            "type": "integer"
          },
          "aaData": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "inline_response_200_2": {
        "properties": {
          "deviceId": {
            "type": "integer"
          },
          "version": {
            "type": "number"
          },
          "isActive": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deviceIdStruct": {
            "$ref": "#/components/schemas/operations_deviceIdStruct"
          },
          "lastConnectedTime": {
            "type": "string"
          },
          "created": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          }
        }
      },
      "device_unregister_body": {
        "properties": {
          "DeviceId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "inline_response_200_3": {
        "properties": {
          "name": {
            "type": "integer"
          },
          "alias": {
            "type": "object"
          },
          "reportedValue": {
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "writable": {
            "type": "boolean"
          },
          "updated": {
            "type": "string"
          }
        }
      },
      "monitoring_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "operations_deviceIdStruct": {
        "type": "object",
        "properties": {
          "manufacturer": {
            "type": "string"
          },
          "oui": {
            "type": "string"
          },
          "productClass": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "operations_entries": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object"
          },
          "priority": {
            "type": "number"
          }
        }
      },
      "operations_body": {
        "type": "object",
        "properties": {
          "deviceIdStruct": {
            "$ref": "#/components/schemas/operations_deviceIdStruct"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/operations_entries"
            }
          }
        }
      },
      "dmsproductTypereportsummary_entries": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "report_summary_body": {
        "type": "object",
        "properties": {
          "currentproduct": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dmsproductTypereportsummary_entries"
            }
          }
        }
      },
      "scope_attributes_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cpeNumber": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "itemId_addToSn_body": {
        "type": "object",
        "properties": {
          "sn": {
            "type": "string"
          }
        }
      },
      "itemId_addToMsisdn_body": {
        "type": "object",
        "properties": {
          "msisdn": {
            "type": "string"
          }
        }
      },
      "itemId_editToSn_body": {
        "type": "object",
        "properties": {
          "sn": {
            "type": "string"
          }
        }
      },
      "itemId_editToMsisdn_body": {
        "type": "object",
        "properties": {
          "msisdn": {
            "type": "string"
          }
        }
      },
      "server_files_body": {
        "properties": {
          "file": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "server_files_body_1": {
        "properties": {
          "file": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "server_bulkDataRule_body": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "server_bulkDataRule_body_1": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "user_verifyidp_body": {
        "type": "object",
        "properties": {
          "idpdata": {
            "type": "object"
          }
        }
      },
      "user_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "user_body_1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "device_register_body": {
        "required": [
          "oui",
          "password",
          "productClass",
          "serialNumber"
        ],
        "type": "object",
        "properties": {
          "oui": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "productClass": {
            "type": "string"
          }
        }
      },
      "nbiuspoperations_deviceIdStruct": {
        "type": "object",
        "properties": {
          "OUI": {
            "type": "string"
          },
          "ProductClass": {
            "type": "string"
          },
          "SerialNumber": {
            "type": "string"
          }
        }
      },
      "nbiuspoperations_entries": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object"
          }
        }
      },
      "usp_operations_body": {
        "type": "object",
        "properties": {
          "deviceIdStruct": {
            "$ref": "#/components/schemas/nbiuspoperations_deviceIdStruct"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nbiuspoperations_entries"
            }
          }
        }
      },
      "usp_operation_body": {
        "type": "object",
        "properties": {
          "deviceIdStruct": {
            "$ref": "#/components/schemas/nbiuspoperations_deviceIdStruct"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nbiuspoperations_entries"
            }
          }
        }
      },
      "deviceId_attribute_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "device_unregister_body_1": {
        "oneOf": [
          {
            "type": "string",
            "description": "deviceId"
          },
          {
            "type": "array",
            "description": "deviceIds",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "deviceId_operation_body": {
        "type": "object",
        "properties": {
          "parameterList": {
            "type": "string"
          }
        }
      },
      "configuration_id_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "stages": {
            "type": "string"
          },
          "firstStage": {
            "type": "string"
          },
          "schedule": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "updated": {
            "type": "string"
          }
        }
      },
      "usp_configuration_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "nbiuspproductNamereportsummary_entries": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "report_summary_body_1": {
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/nbiuspproductNamereportsummary_entries"
            }
          }
        }
      },
      "inline_response_200_schedule": {
        "type": "object",
        "properties": {
          "standardTime": {
            "type": "string"
          },
          "validFrom": {
            "type": "string"
          },
          "validUntil": {
            "type": "string"
          },
          "windowEnd": {
            "type": "string"
          },
          "windowEndMinute": {
            "type": "string"
          },
          "windowStart": {
            "type": "string"
          },
          "windowStartMinute": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "id": {
        "name": "id",
        "in": "path",
        "description": "id",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "deviceId": {
        "name": "deviceId",
        "in": "path",
        "description": "deviceId",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "reportId": {
        "name": "reportId",
        "in": "path",
        "description": "reportId",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "productType": {
        "name": "productType",
        "in": "path",
        "description": "productType",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "size": {
        "name": "size",
        "in": "query",
        "description": "size",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "page",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "sort": {
        "name": "sort",
        "in": "query",
        "description": "sort",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "name": "filter",
        "in": "query",
        "description": "filter",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "groupName": {
        "name": "groupName",
        "in": "query",
        "description": "groupName",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "autoFiltering": {
        "name": "autoFiltering",
        "in": "query",
        "description": "autoFiltering",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean"
        }
      },
      "scopeType": {
        "name": "scopeType",
        "in": "query",
        "description": "scopeType",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "format": {
        "name": "format",
        "in": "query",
        "description": "format",
        "required": true,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "enum": [
            "txt",
            "csv",
            "xlsx"
          ]
        }
      },
      "msisdn": {
        "name": "msisdn",
        "in": "query",
        "description": "msisdn",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "imei": {
        "name": "imei",
        "in": "query",
        "description": "imei",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "Struct": {
        "description": "Struct",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Struct"
            }
          }
        },
        "required": true
      },
      "Version": {
        "description": "version",
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            }
          }
        },
        "required": true
      }
    }
  }
}